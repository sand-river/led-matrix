from PIL import Image, ImageDraw, ImageFont, ImageOps
import numpy as np

class Character():
    images = []
    dot_chars = []
    def __init__(self):
        for dot_char in self.dot_chars:
            self.images.append(
                Image.fromarray((dot_char * 255).astype(np.uint8))
            )

class Mario(Character):
    RED = (128,255,255)
    GRN = (255,192,255)
    ORG = (128,192,255)
    BLK = (0,0,0)
    dot_chars = np.array([
[
[BLK,BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,BLK,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,RED,RED,RED,RED,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,GRN,ORG,ORG,GRN,ORG,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,ORG,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,ORG,GRN,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK,BLK],
[BLK,BLK,BLK,GRN,GRN,ORG,ORG,ORG,ORG,GRN,GRN,GRN,GRN,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,ORG,ORG,ORG,ORG,ORG,ORG,ORG,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,RED,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,GRN,GRN,RED,GRN,GRN,RED,GRN,GRN,GRN,BLK,BLK,BLK],
[BLK,BLK,GRN,GRN,GRN,GRN,RED,RED,RED,RED,GRN,GRN,GRN,GRN,BLK,BLK],
[BLK,BLK,ORG,ORG,GRN,RED,ORG,RED,RED,ORG,RED,GRN,ORG,ORG,BLK,BLK],
[BLK,BLK,ORG,ORG,ORG,RED,RED,RED,RED,RED,RED,ORG,ORG,ORG,BLK,BLK],
[BLK,BLK,ORG,ORG,RED,RED,RED,RED,RED,RED,RED,RED,ORG,ORG,BLK,BLK],
[BLK,BLK,BLK,BLK,RED,RED,RED,BLK,BLK,RED,RED,RED,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,GRN,GRN,BLK,BLK,BLK,BLK,GRN,GRN,GRN,BLK,BLK,BLK],
[BLK,BLK,GRN,GRN,GRN,GRN,BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,BLK,BLK],
],
[
[BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,RED,RED,RED,RED,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,ORG,ORG,GRN,ORG,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,ORG,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,ORG,GRN,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,ORG,ORG,ORG,ORG,GRN,GRN,GRN,GRN,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,BLK,ORG,ORG,ORG,ORG,ORG,ORG,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,RED,GRN,BLK,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,ORG,GRN,GRN,GRN,GRN,GRN,GRN,ORG,ORG,ORG,BLK,BLK],
[BLK,BLK,BLK,ORG,ORG,RED,GRN,GRN,GRN,GRN,GRN,ORG,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,GRN,RED,RED,RED,RED,RED,RED,RED,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,GRN,RED,RED,RED,RED,RED,RED,RED,RED,BLK,BLK,BLK,BLK],
[BLK,BLK,GRN,GRN,RED,RED,RED,BLK,RED,RED,RED,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,GRN,BLK,BLK,BLK,BLK,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK],
],
[
[BLK,BLK,BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,RED,RED,RED,RED,RED,RED,RED,RED,RED,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,ORG,ORG,GRN,ORG,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,ORG,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,ORG,GRN,GRN,ORG,ORG,ORG,GRN,ORG,ORG,ORG,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,ORG,ORG,ORG,ORG,GRN,GRN,GRN,GRN,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,BLK,ORG,ORG,ORG,ORG,ORG,ORG,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,RED,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,RED,RED,GRN,GRN,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,GRN,RED,RED,ORG,RED,RED,ORG,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,RED,RED,RED,RED,RED,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,RED,GRN,GRN,ORG,ORG,ORG,RED,RED,RED,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,RED,GRN,ORG,ORG,RED,RED,RED,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,RED,RED,RED,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,GRN,GRN,GRN,BLK,BLK,BLK,BLK],
[BLK,BLK,BLK,BLK,BLK,GRN,GRN,GRN,GRN,BLK,BLK,BLK,BLK,BLK,BLK,BLK],
],
])
